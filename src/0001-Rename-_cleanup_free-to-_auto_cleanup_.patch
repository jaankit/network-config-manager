From 9db9cafdf4cfdf94e65c29bbd22702eebf785f06 Mon Sep 17 00:00:00 2001
From: Susant Sahani <ssahani@vmware.com>
Date: Wed, 6 May 2020 05:38:13 +0200
Subject: [PATCH] Rename _cleanup_free to _auto_cleanup_

---
 src/cli/cli.c                           |   2 +-
 src/dbus/dbus.c                         |   2 +-
 src/dns/dns.c                           |   8 +-
 src/dracut/dracut-parser.c              |  10 +--
 src/lib-network/networkd/networkd-api.c |   8 +-
 src/manager/network-address.c           |   6 +-
 src/manager/network-link.c              |  24 ++---
 src/manager/network-manager-ctl.c       | 112 ++++++++++++------------
 src/manager/network-manager.c           |  52 +++++------
 src/manager/network-route.c             |   6 +-
 src/manager/network.c                   |  10 +--
 src/share/alloc-util.h                  |  16 ++--
 src/share/config-file.c                 |   2 +-
 src/share/config-parser.c               |  10 +--
 src/share/file-util.c                   |   6 +-
 src/share/network-util.c                |  12 +--
 src/share/set.c                         |   2 +-
 src/share/string-util.c                 |   2 +-
 src/udev/udev-hwdb.c                    |   4 +-
 src/yaml/yaml-parser.c                  |   4 +-
 20 files changed, 149 insertions(+), 149 deletions(-)

diff --git a/src/cli/cli.c b/src/cli/cli.c
index 23cbab4..8ce6ef9 100644
--- a/src/cli/cli.c
+++ b/src/cli/cli.c
@@ -18,7 +18,7 @@
 #include "log.h"
 
 int cli_manager_new(const Cli *cli_commands, CliManager **ret) {
-        _cleanup_free_ CliManager *m = NULL;
+        _auto_cleanup_ CliManager *m = NULL;
         int i;
 
         assert(cli_commands);
diff --git a/src/dbus/dbus.c b/src/dbus/dbus.c
index 5629c75..386030f 100644
--- a/src/dbus/dbus.c
+++ b/src/dbus/dbus.c
@@ -85,7 +85,7 @@ int dbus_get_property_from_hostnamed(const char *p, char **ret) {
         _cleanup_(sd_bus_error_free) sd_bus_error bus_error = SD_BUS_ERROR_NULL;
         _cleanup_(sd_bus_message_unrefp) sd_bus_message *reply = NULL;
         _cleanup_(sd_bus_freep) sd_bus *bus = NULL;
-        _cleanup_free_ char *t = NULL;
+        _auto_cleanup_ char *t = NULL;
         char *s;
         int r;
 
diff --git a/src/dns/dns.c b/src/dns/dns.c
index bc0300c..45424f6 100644
--- a/src/dns/dns.c
+++ b/src/dns/dns.c
@@ -15,7 +15,7 @@
 #include "string-util.h"
 
 int dns_servers_new(DNSServers **ret) {
-        _cleanup_free_ DNSServers *h = NULL;
+        _auto_cleanup_ DNSServers *h = NULL;
 
         h = new0(DNSServers, 1);
         if (!h)
@@ -95,7 +95,7 @@ int dns_server_add(DNSServers **h, DNSServer *a) {
 }
 
 int dns_domain_news(DNSDomains **ret) {
-        _cleanup_free_ DNSDomains *h = NULL;
+        _auto_cleanup_ DNSDomains *h = NULL;
 
         h = new0(DNSDomains, 1);
         if (!h)
@@ -211,7 +211,7 @@ int add_dns_server_and_domain_to_resolv_conf(DNSServers *dns, char **domains) {
 
         if (dns) {
                 for (i = g_sequence_get_begin_iter(dns->dns_servers); !g_sequence_iter_is_end(i); i = g_sequence_iter_next(i)) {
-                        _cleanup_free_ char *pretty = NULL;
+                        _auto_cleanup_ char *pretty = NULL;
                         DNSServer *d =  g_sequence_get(i);
 
                         r = ip_to_string(d->family, &d->address, &pretty);
@@ -230,7 +230,7 @@ int add_dns_server_and_domain_to_resolv_conf(DNSServers *dns, char **domains) {
 
         if (domains && domain_config) {
                 strv_foreach(j, domains) {
-                        _cleanup_free_ char *s = NULL;
+                        _auto_cleanup_ char *s = NULL;
 
                         if (!strv_contains((const char **) domain_config, *j)) {
 
diff --git a/src/dracut/dracut-parser.c b/src/dracut/dracut-parser.c
index 6bb5b8c..237c0b3 100644
--- a/src/dracut/dracut-parser.c
+++ b/src/dracut/dracut-parser.c
@@ -129,8 +129,8 @@ static int dracut_parse_mac(char *mac, Network *n) {
  * ip=<client-IP>:[<server-id>]:<gateway-IP-number>:<netmask>:<client-hostname>:<interface>:{dhcp|dhcp6|auto6|on|any|none|off}
  */
  static int parse_command_line_ip_interface(const char *line, Network *n) {
-        _cleanup_free_ IPAddress *peer = NULL, *prefix = NULL;
-        _cleanup_free_ Address *a = NULL;
+        _auto_cleanup_ IPAddress *peer = NULL, *prefix = NULL;
+        _auto_cleanup_ Address *a = NULL;
         _cleanup_strv_ char **s = NULL;
         int r;
 
@@ -277,8 +277,8 @@ static int parse_command_line_nameserver(const char *line, Network *n) {
 
 /* rd.route=<net>/<netmask>:<gateway>[:<interface>] */
 static int parse_command_line_rd_route(const char *line, Network *n) {
-        _cleanup_free_ IPAddress *destination = NULL, *gw = NULL;
-        _cleanup_free_ Route *route = NULL;
+        _auto_cleanup_ IPAddress *destination = NULL, *gw = NULL;
+        _auto_cleanup_ Route *route = NULL;
         _cleanup_strv_ char **s = NULL;
         int r;
 
@@ -390,7 +390,7 @@ int parse_proc_command_line(const char *cmd_line, GHashTable **ret) {
 
         strv_foreach(j, s) {
                 _cleanup_(network_unrefp) Network *n = NULL;
-                _cleanup_free_ char *k = NULL, *v = NULL;
+                _auto_cleanup_ char *k = NULL, *v = NULL;
 
                 r = parse_line(*j, &k, &v);
                 if (r < 0)
diff --git a/src/lib-network/networkd/networkd-api.c b/src/lib-network/networkd/networkd-api.c
index f3bf81f..6d341f0 100644
--- a/src/lib-network/networkd/networkd-api.c
+++ b/src/lib-network/networkd/networkd-api.c
@@ -12,7 +12,7 @@
 #include "string-util.h"
 
 int network_parse_operational_state(char **state) {
-        _cleanup_free_ char *s = NULL;
+        _auto_cleanup_ char *s = NULL;
         int r;
 
         assert(state);
@@ -30,7 +30,7 @@ int network_parse_operational_state(char **state) {
 }
 
 static int network_parse_strv(const char *key, char ***ret) {
-        _cleanup_free_ char *s = NULL;
+        _auto_cleanup_ char *s = NULL;
         int r;
 
         assert(ret);
@@ -66,7 +66,7 @@ int network_parse_route_domains(char ***ret) {
 }
 
 static int network_parse_link_strv(int ifindex, const char *key, char ***ret) {
-        _cleanup_free_ char *s = NULL, *path = NULL;
+        _auto_cleanup_ char *s = NULL, *path = NULL;
         int r;
 
         assert(ifindex);
@@ -88,7 +88,7 @@ static int network_parse_link_strv(int ifindex, const char *key, char ***ret) {
 }
 
 static int network_parse_link_string(int ifindex, const char *key, char **ret) {
-        _cleanup_free_ char *s = NULL, *path = NULL;
+        _auto_cleanup_ char *s = NULL, *path = NULL;
         int r;
 
         assert(ifindex);
diff --git a/src/manager/network-address.c b/src/manager/network-address.c
index 7911932..9c7bbe7 100644
--- a/src/manager/network-address.c
+++ b/src/manager/network-address.c
@@ -102,7 +102,7 @@ int address_add(Addresses **h, Address *a) {
 }
 
 static int fill_link_address(struct nlmsghdr *h, size_t len, int ifindex, Addresses **ret) {
-        _cleanup_free_ Address *a = NULL;
+        _auto_cleanup_ Address *a = NULL;
         struct rtattr *rta_tb[IFA_MAX+1];
         struct ifaddrmsg *ifm;
         struct nlmsghdr *p;
@@ -162,7 +162,7 @@ static int fill_link_address(struct nlmsghdr *h, size_t len, int ifindex, Addres
 }
 
 static int acquire_link_address(int s, int ifindex, Addresses **ret) {
-        _cleanup_free_ IPAddressMessage *m = NULL;
+        _auto_cleanup_ IPAddressMessage *m = NULL;
         struct nlmsghdr *reply = NULL;
         int r;
 
@@ -226,7 +226,7 @@ int manager_get_one_link_address(int ifindex, Addresses **ret) {
 }
 
 static int link_add_address(int s, int ifindex, IPAddress *address, IPAddress *peer) {
-        _cleanup_free_ IPAddressMessage *m = NULL;
+        _auto_cleanup_ IPAddressMessage *m = NULL;
         int r;
 
         assert(s);
diff --git a/src/manager/network-link.c b/src/manager/network-link.c
index 8090720..c781c11 100644
--- a/src/manager/network-link.c
+++ b/src/manager/network-link.c
@@ -112,7 +112,7 @@ static int link_add(Links **h, Link *link) {
 
 static int fill_one_link_info(struct nlmsghdr *h, size_t len, Link **ret) {
         struct rtattr *rta_tb[IFLA_MAX+1];
-        _cleanup_free_ Link *n = NULL;
+        _auto_cleanup_ Link *n = NULL;
         struct ifinfomsg *iface;
         struct nlmsghdr *p;
         int r, l;
@@ -154,8 +154,8 @@ static int fill_one_link_info(struct nlmsghdr *h, size_t len, Link **ret) {
 }
 
 static int acquire_one_link_info(int s, int ifindex, Link **ret) {
-        _cleanup_free_ IPlinkMessage *m = NULL;
-        _cleanup_free_ Link *link = NULL;
+        _auto_cleanup_ IPlinkMessage *m = NULL;
+        _auto_cleanup_ Link *link = NULL;
         struct nlmsghdr *reply = NULL;
         int r;
 
@@ -209,7 +209,7 @@ int link_get_one_link(const char *ifname, Link **ret) {
 
 static int fill_link_info(Links **links, struct nlmsghdr *h, size_t len) {
         struct rtattr *rta_tb[IFLA_MAX+1];
-        _cleanup_free_ Link *n = NULL;
+        _auto_cleanup_ Link *n = NULL;
         struct ifinfomsg *iface;
         struct nlmsghdr *p;
         int r, l;
@@ -256,8 +256,8 @@ static int fill_link_info(Links **links, struct nlmsghdr *h, size_t len) {
 }
 
 static int acquire_link_info(int s, Links **ret) {
-        _cleanup_free_ IPlinkMessage *m = NULL;
-        _cleanup_free_ Links *links = NULL;
+        _auto_cleanup_ IPlinkMessage *m = NULL;
+        _auto_cleanup_ Links *links = NULL;
         struct nlmsghdr *reply = NULL;
         int r;
 
@@ -312,7 +312,7 @@ int link_get_links(Links **ret) {
 }
 
 int link_update_mtu(const IfNameIndex *ifnameidx, uint32_t mtu) {
-      _cleanup_free_ IPlinkMessage *m = NULL;
+      _auto_cleanup_ IPlinkMessage *m = NULL;
       _cleanup_close_ int s = -1;
       int r;
 
@@ -335,7 +335,7 @@ int link_update_mtu(const IfNameIndex *ifnameidx, uint32_t mtu) {
 }
 
 int link_set_mac_address(const IfNameIndex *ifnameidx, const char *mac_address) {
-        _cleanup_free_ IPlinkMessage *m = NULL;
+        _auto_cleanup_ IPlinkMessage *m = NULL;
         _cleanup_close_ int s = -1;
         int r;
 
@@ -358,8 +358,8 @@ int link_set_mac_address(const IfNameIndex *ifnameidx, const char *mac_address)
 }
 
 int link_set_state(const IfNameIndex *ifnameidx, LinkState state) {
-        _cleanup_free_ IPlinkMessage *m = NULL;
-        _cleanup_free_ char *operstate = NULL;
+        _auto_cleanup_ IPlinkMessage *m = NULL;
+        _auto_cleanup_ char *operstate = NULL;
         _cleanup_close_ int s = -1;
         int r;
 
@@ -399,7 +399,7 @@ int link_set_state(const IfNameIndex *ifnameidx, LinkState state) {
 }
 
 int link_read_sysfs_attribute(const char *ifname, const char *attribute, char **ret) {
-        _cleanup_free_ char *line = NULL, *path = NULL;
+        _auto_cleanup_ char *line = NULL, *path = NULL;
         int r;
 
         assert(ifname);
@@ -421,7 +421,7 @@ int link_read_sysfs_attribute(const char *ifname, const char *attribute, char **
 }
 
 int link_get_mtu(const char *ifname, uint32_t *mtu) {
-        _cleanup_free_ char *s = NULL;
+        _auto_cleanup_ char *s = NULL;
         int r, k;
 
         (void) link_read_sysfs_attribute(ifname, "mtu", &s);
diff --git a/src/manager/network-manager-ctl.c b/src/manager/network-manager-ctl.c
index 38fccb6..b3271ad 100644
--- a/src/manager/network-manager-ctl.c
+++ b/src/manager/network-manager-ctl.c
@@ -47,7 +47,7 @@ static void link_state_to_color(const char *state, const char **on) {
 
 static void display_links_info(gpointer data_ptr, gpointer ignored) {
         const char *setup_color, *operational_color, *operstates, *operstates_color;
-        _cleanup_free_ char *setup = NULL, *operational = NULL;
+        _auto_cleanup_ char *setup = NULL, *operational = NULL;
         Link *link = NULL;
 
         setup_color = operational_color = operstates = operstates_color = ansi_color_reset();
@@ -99,7 +99,7 @@ static int list_links(int argc, char *argv[]) {
 
 static void list_one_link_addresses(gpointer key, gpointer value, gpointer userdata) {
         _cleanup_strv_ char **dhcp = NULL;
-        _cleanup_free_ char *c = NULL;
+        _auto_cleanup_ char *c = NULL;
         static bool first = true;
         unsigned long size;
         Address *a = NULL;
@@ -121,7 +121,7 @@ static void list_one_link_addresses(gpointer key, gpointer value, gpointer userd
 }
 
 static int display_one_link_udev(Link *l, bool display, char **link_file) {
-        _cleanup_free_ char *devid = NULL, *device = NULL, *manufacturer = NULL;
+        _auto_cleanup_ char *devid = NULL, *device = NULL, *manufacturer = NULL;
         const char *link, *driver, *path, *vendor, *model;
         struct udev_device *dev;
         struct udev *udev;
@@ -174,7 +174,7 @@ static int display_one_link_udev(Link *l, bool display, char **link_file) {
 }
 
 static void list_link_sysfs_attributes(Link *l) {
-        _cleanup_free_ char *duplex = NULL, *speed = NULL, *ether = NULL, *mtu = NULL;
+        _auto_cleanup_ char *duplex = NULL, *speed = NULL, *ether = NULL, *mtu = NULL;
 
         (void) link_read_sysfs_attribute(l->name, "speed", &speed);
         (void) link_read_sysfs_attribute(l->name, "duplex", &duplex);
@@ -193,13 +193,13 @@ static void list_link_sysfs_attributes(Link *l) {
 }
 
 static int list_one_link(char *argv[]) {
-        _cleanup_free_ char *setup_state = NULL, *operational_state = NULL, *tz = NULL, *network = NULL, *link = NULL;
+        _auto_cleanup_ char *setup_state = NULL, *operational_state = NULL, *tz = NULL, *network = NULL, *link = NULL;
         _cleanup_strv_ char **dns = NULL, **ntp = NULL, **search_domains = NULL, **route_domains = NULL;
         const char *operational_state_color, *setup_set_color;
         _cleanup_(addresses_unref) Addresses *addr = NULL;
         _cleanup_(routes_free) Routes *route = NULL;
-        _cleanup_free_ IfNameIndex *p = NULL;
-        _cleanup_free_ Link *l = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
+        _auto_cleanup_ Link *l = NULL;
         int r;
 
         r = parse_ifname_or_index(*argv, &p);
@@ -257,7 +257,7 @@ static int list_one_link(char *argv[]) {
 
                  printf("         %sGateway%s: ", ansi_color_bold_cyan(), ansi_color_reset());
                  for (i = route->routes; i; i = i->next) {
-                         _cleanup_free_ char *c = NULL;
+                         _auto_cleanup_ char *c = NULL;
                          Route *a = NULL;
 
                          a = i->data;
@@ -271,7 +271,7 @@ static int list_one_link(char *argv[]) {
          }
 
          if (dns) {
-                 _cleanup_free_ char *s = NULL;
+                 _auto_cleanup_ char *s = NULL;
 
                  s = strv_join(" ", dns);
                  if (!s)
@@ -281,7 +281,7 @@ static int list_one_link(char *argv[]) {
          }
 
          if (search_domains) {
-                 _cleanup_free_ char *s = NULL;
+                 _auto_cleanup_ char *s = NULL;
 
                  s = strv_join(" ", search_domains);
                  if (!s)
@@ -291,7 +291,7 @@ static int list_one_link(char *argv[]) {
         }
 
          if (route_domains) {
-                 _cleanup_free_ char *s = NULL;
+                 _auto_cleanup_ char *s = NULL;
 
                  s = strv_join(" ", route_domains);
                  if (!s)
@@ -301,7 +301,7 @@ static int list_one_link(char *argv[]) {
          }
 
          if (ntp) {
-                 _cleanup_free_ char *s = NULL;
+                 _auto_cleanup_ char *s = NULL;
 
                  s = strv_join(" ", ntp);
                  if (!s)
@@ -319,7 +319,7 @@ static int list_one_link(char *argv[]) {
 }
 
 static void list_link_addresses(gpointer key, gpointer value, gpointer userdata) {
-        _cleanup_free_ char *c = NULL;
+        _auto_cleanup_ char *c = NULL;
         char buf[IF_NAMESIZE + 1] = {};
         static bool first = true;
         unsigned long size;
@@ -338,7 +338,7 @@ static void list_link_addresses(gpointer key, gpointer value, gpointer userdata)
 }
 
 static int system_status(int argc, char *argv[]) {
-        _cleanup_free_ char *state = NULL, *hostname = NULL, *kernel = NULL, *kernel_release = NULL,
+        _auto_cleanup_ char *state = NULL, *hostname = NULL, *kernel = NULL, *kernel_release = NULL,
                             *arch = NULL, *virt = NULL, *os = NULL, *systemd = NULL;
         _cleanup_strv_ char **dns = NULL, **ntp = NULL;
         _cleanup_(routes_free) Routes *routes = NULL;
@@ -392,7 +392,7 @@ static int system_status(int argc, char *argv[]) {
 
                 printf("             %sGateway%s: ", ansi_color_bold_cyan(), ansi_color_reset());
                 for (i = routes->routes; i; i = i->next) {
-                        _cleanup_free_ char *c = NULL;
+                        _auto_cleanup_ char *c = NULL;
                         char buf[IF_NAMESIZE + 1];
 
                         rt = i->data;
@@ -413,7 +413,7 @@ static int system_status(int argc, char *argv[]) {
         (void) network_parse_ntp(&ntp);
 
         if (dns) {
-                _cleanup_free_ char *s = NULL;
+                _auto_cleanup_ char *s = NULL;
 
                 s = strv_join(" ", dns);
                 if (!s)
@@ -423,7 +423,7 @@ static int system_status(int argc, char *argv[]) {
         }
 
         if (ntp) {
-                _cleanup_free_ char *s = NULL;
+                _auto_cleanup_ char *s = NULL;
 
                 s = strv_join(" ", ntp);
                 if (!s)
@@ -450,7 +450,7 @@ static int link_status(int argc, char *argv[]) {
 }
 
 static int link_set_mtu(int argc, char *argv[]) {
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         uint32_t mtu;
         int r;
 
@@ -474,7 +474,7 @@ static int link_set_mtu(int argc, char *argv[]) {
 }
 
 static int link_set_mac(int argc, char *argv[]) {
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         int r;
 
         r = parse_ifname_or_index(argv[1], &p);
@@ -498,7 +498,7 @@ static int link_set_mac(int argc, char *argv[]) {
 }
 
 static int link_set_mode(int argc, char *argv[]) {
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         bool k;
         int r;
 
@@ -525,7 +525,7 @@ static int link_set_mode(int argc, char *argv[]) {
 }
 
 static int link_set_dhcp_mode(int argc, char *argv[]) {
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         int mode, r;
 
         r = parse_ifname_or_index(argv[1], &p);
@@ -550,7 +550,7 @@ static int link_set_dhcp_mode(int argc, char *argv[]) {
 }
 
 static int link_set_dhcp_client_identifier(int argc, char *argv[]) {
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         DHCPClientIdentifier d;
         int r;
 
@@ -576,7 +576,7 @@ static int link_set_dhcp_client_identifier(int argc, char *argv[]) {
 }
 
 static int link_set_dhcp_client_iaid(int argc, char *argv[]) {
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         uint32_t v;
         int r;
 
@@ -602,7 +602,7 @@ static int link_set_dhcp_client_iaid(int argc, char *argv[]) {
 }
 
 static int link_set_network_section_bool(int argc, char *argv[]) {
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         const char *k;
         bool v;
         int r;
@@ -647,7 +647,7 @@ static int link_set_network_section_bool(int argc, char *argv[]) {
 }
 
 static int link_set_dhcp_section(int argc, char *argv[]) {
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         const char *k;
         bool v;
         int r;
@@ -686,7 +686,7 @@ static int link_set_dhcp_section(int argc, char *argv[]) {
 }
 
 static int link_set_dhcp_client_duid(int argc, char *argv[]) {
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         DHCPClientDUIDType d;
         bool system = false;
         int r;
@@ -718,7 +718,7 @@ static int link_set_dhcp_client_duid(int argc, char *argv[]) {
 }
 
 static int link_update_state(int argc, char *argv[]) {
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         LinkState state;
         int r;
 
@@ -744,8 +744,8 @@ static int link_update_state(int argc, char *argv[]) {
 }
 
 static int link_add_address(int argc, char *argv[]) {
-        _cleanup_free_ IPAddress *address = NULL, *peer = NULL;
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ IPAddress *address = NULL, *peer = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         int r;
 
         r = parse_ifname_or_index(argv[1], &p);
@@ -778,7 +778,7 @@ static int link_add_address(int argc, char *argv[]) {
 }
 
 static int link_delete_address(int argc, char *argv[]) {
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         int r;
 
         r = parse_ifname_or_index(argv[1], &p);
@@ -797,9 +797,9 @@ static int link_delete_address(int argc, char *argv[]) {
 }
 
 static int link_add_default_gateway(int argc, char *argv[]) {
-        _cleanup_free_ IPAddress *address = NULL;
-        _cleanup_free_ IfNameIndex *p = NULL;
-        _cleanup_free_ Route *rt = NULL;
+        _auto_cleanup_ IPAddress *address = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
+        _auto_cleanup_ Route *rt = NULL;
         int r, onlink = 0;
 
         r = parse_ifname_or_index(argv[1], &p);
@@ -846,9 +846,9 @@ static int link_add_default_gateway(int argc, char *argv[]) {
 }
 
 static int link_add_route(int argc, char *argv[]) {
-        _cleanup_free_ IPAddress *address = NULL;
-        _cleanup_free_ IfNameIndex *p = NULL;
-        _cleanup_free_ Route *rt = NULL;
+        _auto_cleanup_ IPAddress *address = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
+        _auto_cleanup_ Route *rt = NULL;
         int r, metric = 0;
 
         r = parse_ifname_or_index(argv[1], &p);
@@ -896,7 +896,7 @@ static int link_add_route(int argc, char *argv[]) {
 }
 
 static int link_delete_gateway_or_route(int argc, char *argv[]) {
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         int r;
 
         r = parse_ifname_or_index(argv[1], &p);
@@ -920,8 +920,8 @@ static int link_delete_gateway_or_route(int argc, char *argv[]) {
 
 static int show_dns_server(int argc, char *argv[]) {
         _cleanup_(dns_servers_free) DNSServers *fallback = NULL, *dns = NULL, *current = NULL;
-        _cleanup_free_ IfNameIndex *p = NULL;
-        _cleanup_free_ char *setup = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
+        _auto_cleanup_ char *setup = NULL;
         char buf[IF_NAMESIZE + 1] = {};
         GSequenceIter *i;
         DNSServer *d;
@@ -969,7 +969,7 @@ static int show_dns_server(int argc, char *argv[]) {
                 printf("                 %sDNS%s:", ansi_color_bold_cyan(), ansi_color_reset());
 
                 for (i = g_sequence_get_begin_iter(dns->dns_servers); !g_sequence_iter_is_end(i); i = g_sequence_iter_next(i)) {
-                        _cleanup_free_ char *pretty = NULL;
+                        _auto_cleanup_ char *pretty = NULL;
 
                         d = g_sequence_get(i);
 
@@ -985,7 +985,7 @@ static int show_dns_server(int argc, char *argv[]) {
 
         r = dbus_get_dns_servers_from_resolved("CurrentDNSServer", &current);
         if (r >= 0 && current && !g_sequence_is_empty(current->dns_servers)) {
-                _cleanup_free_ char *pretty = NULL;
+                _auto_cleanup_ char *pretty = NULL;
 
                 i = g_sequence_get_begin_iter(current->dns_servers);
                 d = g_sequence_get(i);
@@ -1002,7 +1002,7 @@ static int show_dns_server(int argc, char *argv[]) {
 
                 printf("         %sFallbackDNS%s: ", ansi_color_bold_cyan(), ansi_color_reset());
                 for (i = g_sequence_get_begin_iter(fallback->dns_servers); !g_sequence_iter_is_end(i); i = g_sequence_iter_next(i)) {
-                        _cleanup_free_ char *pretty = NULL;
+                        _auto_cleanup_ char *pretty = NULL;
 
                         d = g_sequence_get(i);
 
@@ -1024,7 +1024,7 @@ static int show_dns_server(int argc, char *argv[]) {
                 printf("%s%5s %-20s %-18s%s\n", ansi_color_blue_header(), "INDEX", "LINK", "DNS", ansi_color_reset());
 
                 for (i = g_sequence_get_begin_iter(dns->dns_servers); !g_sequence_iter_is_end(i); i = g_sequence_iter_next(i)) {
-                        _cleanup_free_ char *pretty = NULL;
+                        _auto_cleanup_ char *pretty = NULL;
 
                         d = g_sequence_get(i);
 
@@ -1043,7 +1043,7 @@ static int show_dns_server(int argc, char *argv[]) {
 
 static int add_dns_server(int argc, char *argv[]) {
         _cleanup_(dns_servers_free) DNSServers *dns = NULL;
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         bool system = false;
         int r, i;
 
@@ -1058,8 +1058,8 @@ static int add_dns_server(int argc, char *argv[]) {
         }
 
         for (i = 2; i < argc; i++) {
-                _cleanup_free_ IPAddress *a = NULL;
-                _cleanup_free_ DNSServer *s = NULL;
+                _auto_cleanup_ IPAddress *a = NULL;
+                _auto_cleanup_ DNSServer *s = NULL;
 
                 r = parse_ip(argv[i], &a);
                 if (r < 0) {
@@ -1097,7 +1097,7 @@ static int add_dns_server(int argc, char *argv[]) {
 
 static int add_dns_domains(int argc, char *argv[]) {
        _cleanup_strv_ char **domains = NULL;
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         bool system = false;
         int r;
 
@@ -1128,8 +1128,8 @@ static int add_dns_domains(int argc, char *argv[]) {
 
 static int show_dns_server_domains(int argc, char *argv[]) {
         _cleanup_(dns_domains_free) DNSDomains *domains = NULL;
-        _cleanup_free_ char *config_domain = NULL, *setup = NULL;
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ char *config_domain = NULL, *setup = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         char buffer[LINE_MAX] = {};
         GSequenceIter *i;
         DNSDomain *d;
@@ -1260,7 +1260,7 @@ static int show_dns_server_domains(int argc, char *argv[]) {
 }
 
 static int revert_resolve_link(int argc, char *argv[]) {
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         int r;
 
         r = parse_ifname_or_index(argv[1], &p);
@@ -1297,7 +1297,7 @@ static int set_system_hostname(int argc, char *argv[]) {
 
 static int link_add_ntp(int argc, char *argv[]) {
        _cleanup_strv_ char **ntps = NULL;
-       _cleanup_free_ IfNameIndex *p = NULL;
+       _auto_cleanup_ IfNameIndex *p = NULL;
        char **d;
        int r;
 
@@ -1314,7 +1314,7 @@ static int link_add_ntp(int argc, char *argv[]) {
        }
 
        strv_foreach(d, ntps) {
-               _cleanup_free_ IPAddress *a = NULL;
+               _auto_cleanup_ IPAddress *a = NULL;
 
                r = parse_ip(*d, &a);
                if (r < 0) {
@@ -1333,7 +1333,7 @@ static int link_add_ntp(int argc, char *argv[]) {
 }
 
 static int link_disable_ipv6(int argc, char *argv[]) {
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         int r;
 
         r = parse_ifname_or_index(argv[1], &p);
@@ -1362,7 +1362,7 @@ static int network_reload(int argc, char *argv[]) {
 }
 
 static int link_reconfigure(int argc, char *argv[]) {
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         int r;
 
         r = parse_ifname_or_index(argv[1], &p);
@@ -1391,7 +1391,7 @@ static int generate_networkd_config_from_yaml(int argc, char *argv[]) {
                 }
 
                 for (;;) {
-                        _cleanup_free_ char *path = NULL;
+                        _auto_cleanup_ char *path = NULL;
 
                         file = g_dir_read_name(dir);
                         if (!file)
@@ -1417,7 +1417,7 @@ static int generate_networkd_config_from_yaml(int argc, char *argv[]) {
 }
 
 static int generate_networkd_config_from_command_line(int argc, char *argv[]) {
-        _cleanup_free_ char *argv_line = NULL;
+        _auto_cleanup_ char *argv_line = NULL;
         int r;
 
         if (argc <= 1)
diff --git a/src/manager/network-manager.c b/src/manager/network-manager.c
index 7899956..f1bfd9a 100644
--- a/src/manager/network-manager.c
+++ b/src/manager/network-manager.c
@@ -31,7 +31,7 @@
 #include "yaml-network-parser.h"
 
 static int create_network_conf_file(const IfNameIndex *ifnameidx, char **ret) {
-        _cleanup_free_ char *file = NULL, *network = NULL;
+        _auto_cleanup_ char *file = NULL, *network = NULL;
         int r;
 
         assert(ifnameidx);
@@ -55,7 +55,7 @@ static int create_network_conf_file(const IfNameIndex *ifnameidx, char **ret) {
 }
 
 static int create_or_parse_network_file(const IfNameIndex *ifnameidx, char **ret) {
-        _cleanup_free_ char *setup = NULL, *network = NULL;
+        _auto_cleanup_ char *setup = NULL, *network = NULL;
         int r;
 
         assert(ifnameidx);
@@ -80,7 +80,7 @@ static int create_or_parse_network_file(const IfNameIndex *ifnameidx, char **ret
 }
 
 int manager_set_link_mode(const IfNameIndex *ifnameidx, bool mode, char **ret) {
-        _cleanup_free_ char *network = NULL;
+        _auto_cleanup_ char *network = NULL;
         int r;
 
         assert(ifnameidx);
@@ -106,7 +106,7 @@ int manager_set_link_mode(const IfNameIndex *ifnameidx, bool mode, char **ret) {
 }
 
 int manager_set_link_dhcp_mode(const IfNameIndex *ifnameidx, DHCPMode mode) {
-        _cleanup_free_ char *network = NULL, *config_dhcp = NULL;
+        _auto_cleanup_ char *network = NULL, *config_dhcp = NULL;
         int r;
 
         assert(ifnameidx);
@@ -136,7 +136,7 @@ int manager_set_link_dhcp_mode(const IfNameIndex *ifnameidx, DHCPMode mode) {
 }
 
 int manager_set_link_dhcp_client_identifier(const IfNameIndex *ifnameidx, DHCPClientIdentifier identifier) {
-        _cleanup_free_ char *network = NULL, *config = NULL;
+        _auto_cleanup_ char *network = NULL, *config = NULL;
         int r;
 
         assert(ifnameidx);
@@ -161,7 +161,7 @@ int manager_set_link_dhcp_client_identifier(const IfNameIndex *ifnameidx, DHCPCl
 }
 
 int manager_set_link_dhcp_client_iaid(const IfNameIndex *ifnameidx, uint32_t iaid) {
-        _cleanup_free_ char *network = NULL;
+        _auto_cleanup_ char *network = NULL;
         unsigned v;
         int r;
 
@@ -187,7 +187,7 @@ int manager_set_link_dhcp_client_iaid(const IfNameIndex *ifnameidx, uint32_t iai
 }
 
 int manager_set_link_dhcp_client_duid(const IfNameIndex *ifnameidx, DHCPClientDUIDType duid, char *raw_data, bool system) {
-        _cleanup_free_ char *network = NULL;
+        _auto_cleanup_ char *network = NULL;
         int r;
 
         if (system) {
@@ -220,7 +220,7 @@ int manager_set_link_dhcp_client_duid(const IfNameIndex *ifnameidx, DHCPClientDU
 }
 
 int manager_set_link_mtu(const IfNameIndex *ifnameidx, uint32_t mtu) {
-        _cleanup_free_ char *network = NULL, *config_mtu = NULL, *config_update_mtu = NULL;
+        _auto_cleanup_ char *network = NULL, *config_mtu = NULL, *config_update_mtu = NULL;
         uint32_t k;
         int r;
 
@@ -258,7 +258,7 @@ int manager_set_link_mtu(const IfNameIndex *ifnameidx, uint32_t mtu) {
 }
 
 int manager_set_link_mac_addr(const IfNameIndex *ifnameidx, const char *mac) {
-        _cleanup_free_ char *p = NULL, *network = NULL, *config_mac = NULL, *config_update_mac = NULL;
+        _auto_cleanup_ char *p = NULL, *network = NULL, *config_mac = NULL, *config_update_mac = NULL;
         int r;
 
         assert(ifnameidx);
@@ -301,7 +301,7 @@ int manager_set_link_state(const IfNameIndex *ifnameidx, LinkState state) {
 }
 
 int manager_configure_link_address(const IfNameIndex *ifnameidx, IPAddress *address, IPAddress *peer) {
-        _cleanup_free_ char *network = NULL, *config_address = NULL, *a = NULL;
+        _auto_cleanup_ char *network = NULL, *config_address = NULL, *a = NULL;
         int r;
 
         assert(ifnameidx);
@@ -355,7 +355,7 @@ int manager_configure_link_address(const IfNameIndex *ifnameidx, IPAddress *addr
 }
 
 int manager_delete_link_address(const IfNameIndex *ifnameidx) {
-        _cleanup_free_ char *setup = NULL, *network = NULL;
+        _auto_cleanup_ char *setup = NULL, *network = NULL;
         int r;
 
         assert(ifnameidx);
@@ -382,7 +382,7 @@ int manager_delete_link_address(const IfNameIndex *ifnameidx) {
 }
 
 int manager_configure_default_gateway(const IfNameIndex *ifnameidx, Route *rt) {
-        _cleanup_free_ char *network = NULL, *config_rt = NULL, *a = NULL, *config_onlink = NULL;
+        _auto_cleanup_ char *network = NULL, *config_rt = NULL, *a = NULL, *config_onlink = NULL;
         int r, onlink;
 
         assert(ifnameidx);
@@ -426,7 +426,7 @@ int manager_configure_default_gateway(const IfNameIndex *ifnameidx, Route *rt) {
 }
 
 int manager_configure_route(const IfNameIndex *ifnameidx, Route *rt) {
-        _cleanup_free_ char *network = NULL, *a = NULL, *config_rt = NULL,*config_onlink = NULL;
+        _auto_cleanup_ char *network = NULL, *a = NULL, *config_rt = NULL,*config_onlink = NULL;
         int r, onlink;
 
         assert(ifnameidx);
@@ -468,7 +468,7 @@ int manager_configure_route(const IfNameIndex *ifnameidx, Route *rt) {
 }
 
 int manager_remove_gateway_or_route(const IfNameIndex *ifnameidx, bool gateway) {
-        _cleanup_free_ char *setup = NULL, *network = NULL, *config = NULL;
+        _auto_cleanup_ char *setup = NULL, *network = NULL, *config = NULL;
         int r;
 
         assert(ifnameidx);
@@ -509,7 +509,7 @@ int manager_remove_gateway_or_route(const IfNameIndex *ifnameidx, bool gateway)
 }
 
 int manager_add_dns_server(const IfNameIndex *ifnameidx, DNSServers *dns, bool system) {
-        _cleanup_free_ char *setup = NULL, *network = NULL, *config_dns = NULL, *a = NULL;
+        _auto_cleanup_ char *setup = NULL, *network = NULL, *config_dns = NULL, *a = NULL;
         GSequenceIter *i;
         int r;
 
@@ -532,7 +532,7 @@ int manager_add_dns_server(const IfNameIndex *ifnameidx, DNSServers *dns, bool s
         }
 
         for (i = g_sequence_get_begin_iter(dns->dns_servers); !g_sequence_iter_is_end(i); i = g_sequence_iter_next(i)) {
-                _cleanup_free_ char *pretty = NULL;
+                _auto_cleanup_ char *pretty = NULL;
                 DNSServer *d = g_sequence_get(i);
 
                 r = ip_to_string(d->family, &d->address, &pretty);
@@ -559,7 +559,7 @@ int manager_add_dns_server(const IfNameIndex *ifnameidx, DNSServers *dns, bool s
 }
 
 int manager_add_dns_server_domain(const IfNameIndex *ifnameidx, char **domains, bool system) {
-        _cleanup_free_ char *setup = NULL, *network = NULL, *config_domain = NULL, *a = NULL;
+        _auto_cleanup_ char *setup = NULL, *network = NULL, *config_domain = NULL, *a = NULL;
         char **d;
         int r;
 
@@ -603,7 +603,7 @@ int manager_add_dns_server_domain(const IfNameIndex *ifnameidx, char **domains,
 }
 
 int manager_read_domains_from_system_config(char **domains) {
-        _cleanup_free_ char *config_domains = NULL;
+        _auto_cleanup_ char *config_domains = NULL;
         int r;
 
         r = parse_config_file("/etc/systemd/resolved.conf", "Resolve", "DOMAINS", &config_domains);
@@ -616,7 +616,7 @@ int manager_read_domains_from_system_config(char **domains) {
 }
 
 int manager_revert_dns_server_and_domain(const IfNameIndex *ifnameidx) {
-        _cleanup_free_ char *setup = NULL, *network = NULL, *config = NULL;
+        _auto_cleanup_ char *setup = NULL, *network = NULL, *config = NULL;
         int r;
 
         assert(ifnameidx);
@@ -649,7 +649,7 @@ int manager_revert_dns_server_and_domain(const IfNameIndex *ifnameidx) {
 }
 
 int manager_set_network_section_bool(const IfNameIndex *ifnameidx, const char *k, bool v) {
-        _cleanup_free_ char *network = NULL;
+        _auto_cleanup_ char *network = NULL;
         int r;
 
         assert(ifnameidx);
@@ -666,7 +666,7 @@ int manager_set_network_section_bool(const IfNameIndex *ifnameidx, const char *k
 }
 
 int manager_set_dhcp_section(const IfNameIndex *ifnameidx, const char *k, bool v) {
-        _cleanup_free_ char *network = NULL;
+        _auto_cleanup_ char *network = NULL;
         int r;
 
         assert(ifnameidx);
@@ -683,7 +683,7 @@ int manager_set_dhcp_section(const IfNameIndex *ifnameidx, const char *k, bool v
 }
 
 int manager_add_ntp_addresses(const IfNameIndex *ifnameidx, char **ntps) {
-        _cleanup_free_ char *network = NULL, *config_ntp = NULL, *a = NULL;
+        _auto_cleanup_ char *network = NULL, *config_ntp = NULL, *a = NULL;
         char **d;
         int r;
 
@@ -716,7 +716,7 @@ int manager_add_ntp_addresses(const IfNameIndex *ifnameidx, char **ntps) {
 }
 
 int manager_disable_ipv6(const IfNameIndex *ifnameidx) {
-        _cleanup_free_ char *network = NULL;
+        _auto_cleanup_ char *network = NULL;
         int r;
 
         assert(ifnameidx);
@@ -753,7 +753,7 @@ int manager_reconfigure_link(const IfNameIndex *ifnameidx) {
 }
 
 int manager_write_wifi_config(const Network *n, const GString *config) {
-        _cleanup_free_ char *path = NULL;
+        _auto_cleanup_ char *path = NULL;
         _cleanup_close_ int fd = -1;
         int r;
 
@@ -782,7 +782,7 @@ int manager_write_wifi_config(const Network *n, const GString *config) {
 }
 
 static int manager_write_network_config(const Network *n, const GString *config) {
-        _cleanup_free_ char *network = NULL, *config_file = NULL;
+        _auto_cleanup_ char *network = NULL, *config_file = NULL;
         _cleanup_close_ int fd = -1;
         int r;
 
@@ -888,7 +888,7 @@ static Network *manager_no_interface_name(GHashTable *networks) {
 
 int manager_generate_networkd_config_from_command_line(const char *file, const char *command_line) {
         _cleanup_hash_ GHashTable *networks = NULL;
-        _cleanup_free_ char *line = NULL;
+        _auto_cleanup_ char *line = NULL;
         Network *n;
         int r = 0;
 
diff --git a/src/manager/network-route.c b/src/manager/network-route.c
index 7f45018..490b94f 100644
--- a/src/manager/network-route.c
+++ b/src/manager/network-route.c
@@ -80,7 +80,7 @@ static int fill_link_route(struct nlmsghdr *h, size_t len, int ifindex, Routes *
         assert(ret);
 
         for (p = h; NLMSG_OK(p, len); p = NLMSG_NEXT(p, len)) {
-                _cleanup_free_ Route *a = NULL;
+                _auto_cleanup_ Route *a = NULL;
 
                 rt = NLMSG_DATA(p);
 
@@ -136,7 +136,7 @@ static int fill_link_route(struct nlmsghdr *h, size_t len, int ifindex, Routes *
 }
 
 static int acquire_link_route(int s, int ifindex, Routes **ret) {
-        _cleanup_free_ IPRouteMessage *m = NULL;
+        _auto_cleanup_ IPRouteMessage *m = NULL;
         struct nlmsghdr *reply = NULL;
         int r;
 
@@ -200,7 +200,7 @@ int manager_get_one_link_route(int ifindex, Routes **ret) {
 }
 
 static int link_add_route(int s, Route *route) {
-        _cleanup_free_ IPRouteMessage *m = NULL;
+        _auto_cleanup_ IPRouteMessage *m = NULL;
         int r;
 
         assert(s);
diff --git a/src/manager/network.c b/src/manager/network.c
index 560acbb..54f5cc2 100644
--- a/src/manager/network.c
+++ b/src/manager/network.c
@@ -197,7 +197,7 @@ int auth_eap_method_to_mode(const char *name) {
 }
 
 int network_new(Network **ret) {
-        _cleanup_free_ Network *n = NULL;
+        _auto_cleanup_ Network *n = NULL;
         int r;
 
         n = new0(Network, 1);
@@ -283,8 +283,8 @@ void g_network_free (gpointer data) {
 }
 
 int parse_address_from_string_and_add(const char *s, Set *a) {
-        _cleanup_free_ IPAddress *address = NULL;
-        _cleanup_free_ char *p = NULL;
+        _auto_cleanup_ IPAddress *address = NULL;
+        _auto_cleanup_ char *p = NULL;
         int r;
 
         if (set_contains(a, (void *) s))
@@ -402,7 +402,7 @@ int generate_wifi_config(Network *n, GString **ret) {
 }
 
 static void append_routes(gpointer key, gpointer value, gpointer userdata) {
-        _cleanup_free_ char *gateway = NULL, *destination = NULL;
+        _auto_cleanup_ char *gateway = NULL, *destination = NULL;
         GString *config = userdata;
         Route *route = value;
 
@@ -443,7 +443,7 @@ static void append_addresses(gpointer key, gpointer value, gpointer userdata) {
 
 int generate_network_config(Network *n, GString **ret) {
         _cleanup_(g_string_unrefp) GString *config = NULL;
-        _cleanup_free_ char *gateway = NULL;
+        _auto_cleanup_ char *gateway = NULL;
 
         assert(n);
 
diff --git a/src/share/alloc-util.h b/src/share/alloc-util.h
index 8375859..2f6f2da 100644
--- a/src/share/alloc-util.h
+++ b/src/share/alloc-util.h
@@ -24,7 +24,7 @@ static inline void freep(void *p) {
         g_free(*(void **) p);
 }
 
-#define DEFINE_CLEANUP_FUNC(type, func)                         \
+#define DEFINE_CLEANUP(type, func)                              \
         static inline void func##p(type *p) {                   \
                 if (*p)                                         \
                         func(*p);                               \
@@ -48,14 +48,14 @@ static inline void close_fdp(int *fd) {
                 close(*fd);
 }
 
-DEFINE_CLEANUP_FUNC(FILE *, fclose);
-DEFINE_CLEANUP_FUNC(FILE *, pclose);
-DEFINE_CLEANUP_FUNC(int *, close_fdp);
-DEFINE_CLEANUP_FUNC(GString **, g_string_unrefp);
-DEFINE_CLEANUP_FUNC(char **, strv_free);
-DEFINE_CLEANUP_FUNC(GHashTable *, g_hash_table_unref);
+DEFINE_CLEANUP(FILE *, fclose);
+DEFINE_CLEANUP(FILE *, pclose);
+DEFINE_CLEANUP(int *, close_fdp);
+DEFINE_CLEANUP(GString **, g_string_unrefp);
+DEFINE_CLEANUP(char **, strv_free);
+DEFINE_CLEANUP(GHashTable *, g_hash_table_unref);
 
-#define _cleanup_free_ _cleanup_(freep)
+#define _auto_cleanup_ _cleanup_(freep)
 #define _cleanup_fclose_ _cleanup_(fclosep)
 #define _cleanup_close_ _cleanup_(close_fdp)
 #define _cleanup_pclose_ _cleanup_(pclosep)
diff --git a/src/share/config-file.c b/src/share/config-file.c
index 0273053..4411e83 100644
--- a/src/share/config-file.c
+++ b/src/share/config-file.c
@@ -130,7 +130,7 @@ int remove_section_from_config(const char *path, const char *section) {
 }
 
 int write_to_resolv_conf(char **dns, char **domains) {
-        _cleanup_free_ char *p = NULL;
+        _auto_cleanup_ char *p = NULL;
         GString* c = NULL;
         size_t len;
         char **l;
diff --git a/src/share/config-parser.c b/src/share/config-parser.c
index 98065b1..e31899e 100644
--- a/src/share/config-parser.c
+++ b/src/share/config-parser.c
@@ -84,7 +84,7 @@ int parse_config_file_integer(const char *path, const char *section, const char
 }
 
 int parse_line(const char *line, char **key, char **value) {
-        _cleanup_free_ char *p = NULL, *s = NULL;
+        _auto_cleanup_ char *p = NULL, *s = NULL;
         int r;
 
         assert(line);
@@ -109,7 +109,7 @@ int parse_line(const char *line, char **key, char **value) {
 
 int parse_state_file(const char *path, const char *key, char **ret) {
         _cleanup_hash_ GHashTable *hash = NULL;
-        _cleanup_free_ char *contents = NULL;
+        _auto_cleanup_ char *contents = NULL;
         _cleanup_strv_ char **lines = NULL;
         GError *e = NULL;
         char **l = NULL;
@@ -135,7 +135,7 @@ int parse_state_file(const char *path, const char *key, char **ret) {
                 return log_oom();
 
         strv_foreach(l, lines) {
-                _cleanup_free_ char *t = NULL, *s = NULL;
+                _auto_cleanup_ char *t = NULL, *s = NULL;
                 char *k = NULL, *v = NULL;
 
                 t = g_strdup(*l);
@@ -169,7 +169,7 @@ int parse_state_file(const char *path, const char *key, char **ret) {
 
 int parse_resolv_conf(char ***dns, char ***domains) {
         _cleanup_strv_ char **lines = NULL, **a = NULL, **b = NULL;
-        _cleanup_free_ char *contents = NULL;
+        _auto_cleanup_ char *contents = NULL;
         char **l = NULL;
         GError *e = NULL;
         size_t n;
@@ -193,7 +193,7 @@ int parse_resolv_conf(char ***dns, char ***domains) {
                 return log_oom();
 
         strv_foreach(l, lines) {
-                _cleanup_free_ char *t = NULL;
+                _auto_cleanup_ char *t = NULL;
 
                 t = g_strdup(*l);
                 if (!t)
diff --git a/src/share/file-util.c b/src/share/file-util.c
index 83ea288..c4321a8 100644
--- a/src/share/file-util.c
+++ b/src/share/file-util.c
@@ -15,7 +15,7 @@
 #include "string-util.h"
 
 int safe_mkdir_p_dir(const char* file_path) {
-    _cleanup_free_  char* dir = g_path_get_dirname(file_path);
+    _auto_cleanup_  char* dir = g_path_get_dirname(file_path);
 
     if (g_mkdir_with_parents(dir, 0755) < 0)
             return -errno;
@@ -43,7 +43,7 @@ int set_file_permisssion(const char *path, const char *user) {
 
 
 int create_conf_file(const char *path, const char *ifname, const char *extension, char **ret) {
-        _cleanup_free_ char *p = NULL, *f = NULL;
+        _auto_cleanup_ char *p = NULL, *f = NULL;
         _cleanup_close_ int fd = -1;
         int r;
 
@@ -72,7 +72,7 @@ int create_conf_file(const char *path, const char *ifname, const char *extension
 
 int read_one_line(const char *path, char **v) {
         _cleanup_fclose_ FILE *fp = NULL;
-        _cleanup_free_ char *line = NULL;
+        _auto_cleanup_ char *line = NULL;
         size_t len = LINE_MAX;
         int l;
 
diff --git a/src/share/network-util.c b/src/share/network-util.c
index 59d3ed5..0842651 100644
--- a/src/share/network-util.c
+++ b/src/share/network-util.c
@@ -38,7 +38,7 @@ int ip_is_null(const IPAddress *a) {
 }
 
 int ip_to_string(int family, const struct IPAddress *u, char **ret) {
-        _cleanup_free_ char *x = NULL;
+        _auto_cleanup_ char *x = NULL;
         const char *p = NULL;
         size_t l = 0;
 
@@ -75,7 +75,7 @@ int ip_to_string(int family, const struct IPAddress *u, char **ret) {
 }
 
 int ip_to_string_prefix(int family, const struct IPAddress *u, char **ret) {
-        _cleanup_free_ char *x = NULL, *y = NULL;
+        _auto_cleanup_ char *x = NULL, *y = NULL;
         char buf[1024] = {};
         int r;
 
@@ -102,7 +102,7 @@ int ip_to_string_prefix(int family, const struct IPAddress *u, char **ret) {
 }
 
 int parse_ipv4(const char *s, IPAddress **ret) {
-        _cleanup_free_ struct IPAddress *b = NULL;
+        _auto_cleanup_ struct IPAddress *b = NULL;
         struct in_addr buffer;
 
         assert(s);
@@ -124,7 +124,7 @@ int parse_ipv4(const char *s, IPAddress **ret) {
 }
 
 int parse_ipv6(const char *s, IPAddress **ret) {
-        _cleanup_free_ struct IPAddress *b = NULL;
+        _auto_cleanup_ struct IPAddress *b = NULL;
         struct in_addr buffer;
 
         assert(s);
@@ -162,7 +162,7 @@ int parse_ip(const char *s, IPAddress **ret) {
 }
 
 int parse_ip_from_string(const char *s, IPAddress **ret) {
-        _cleanup_free_ char *m = NULL;
+        _auto_cleanup_ char *m = NULL;
         char *p, *k;
         long l;
         int r;
@@ -202,7 +202,7 @@ int ipv4_netmask_to_prefixlen(IPAddress *addr) {
 }
 
 int parse_ifname_or_index(char *s, IfNameIndex **ret) {
-        _cleanup_free_ IfNameIndex *p = NULL;
+        _auto_cleanup_ IfNameIndex *p = NULL;
         int r, ifindex;
 
         assert(s);
diff --git a/src/share/set.c b/src/share/set.c
index 74bacae..7430d58 100644
--- a/src/share/set.c
+++ b/src/share/set.c
@@ -10,7 +10,7 @@
 #include "set.h"
 
 int set_new(Set **ret, GHashFunc hash_func, GEqualFunc compare_func) {
-        _cleanup_free_ Set *s = NULL;
+        _auto_cleanup_ Set *s = NULL;
 
         s = new0(Set, 1);
         if (!s)
diff --git a/src/share/string-util.c b/src/share/string-util.c
index 7bf206c..69627ab 100644
--- a/src/share/string-util.c
+++ b/src/share/string-util.c
@@ -23,7 +23,7 @@ const char *bool_to_string(bool x) {
 }
 
 int split_pair(const char *s, const char *sep, char **l, char **r) {
-        _cleanup_free_ char *a = NULL, *b = NULL;
+        _auto_cleanup_ char *a = NULL, *b = NULL;
         _cleanup_strv_ char **x = NULL;
 
         assert(s);
diff --git a/src/udev/udev-hwdb.c b/src/udev/udev-hwdb.c
index b6a44ea..9f86afa 100644
--- a/src/udev/udev-hwdb.c
+++ b/src/udev/udev-hwdb.c
@@ -17,7 +17,7 @@
 int hwdb_get_vendor_model(const char *modalias, char **vendor, char **model) {
         _cleanup_(udev_hwdb_free) struct udev_hwdb *hwdb = NULL;
         _cleanup_(udev_free) struct udev *udev = NULL;
-        _cleanup_free_ char *s = NULL, *t = NULL;
+        _auto_cleanup_ char *s = NULL, *t = NULL;
         struct udev_list_entry *head, *entry;
 
         assert(modalias);
@@ -58,7 +58,7 @@ int hwdb_get_vendor_model(const char *modalias, char **vendor, char **model) {
 int hwdb_get_manufacturer(const uint8_t *ether_address, char **manufacturer) {
         _cleanup_(udev_hwdb_free) struct udev_hwdb *hwdb = NULL;
         _cleanup_(udev_free) struct udev *udev = NULL;
-        _cleanup_free_ char *s = NULL;
+        _auto_cleanup_ char *s = NULL;
         struct udev_list_entry *head, *entry;
         char modalias[24] = {};
 
diff --git a/src/yaml/yaml-parser.c b/src/yaml/yaml-parser.c
index aba48ee..9c25120 100644
--- a/src/yaml/yaml-parser.c
+++ b/src/yaml/yaml-parser.c
@@ -253,7 +253,7 @@ int parse_yaml_address(const char *key,
                        void *userdata,
                        yaml_document_t *doc,
                        yaml_node_t *node) {
-        _cleanup_free_ IPAddress *address = NULL;
+        _auto_cleanup_ IPAddress *address = NULL;
         IPAddress **p = NULL;
         int r;
 
@@ -317,7 +317,7 @@ int parse_yaml_routes(const char *key,
                       void *userdata,
                       yaml_document_t *doc,
                       yaml_node_t *node) {
-        _cleanup_free_ IPAddress *address = NULL;
+        _auto_cleanup_ IPAddress *address = NULL;
         static Route *route;
         Network *network;
         int r;
-- 
2.26.2

